<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isDark = false;
if(room == 3){
audio_stop_all();
audio_play_sound(first_levels,10,true);
global.laser[0] = instance_create(1152,192,obj_vertical_laser);
global.laser[1] = instance_create(1152,320,obj_vertical_laser);
global.laser[2] = instance_create(1152,448,obj_vertical_laser);
global.tlaser = instance_create(1152,64,obj_vertical_laser_top);
global.blaser = instance_create(1152,576,obj_vertical_laser_bottom);
}else if(room == 5){
audio_stop_all();
audio_play_sound(second_levels,10,true);
}else if(room == 8){
audio_stop_all();
audio_play_sound(third_levels,10,true);
}else if(room == 7){
audio_stop_all();
audio_play_sound(transition_level_1,10,true);
}else if(room == 10){
audio_stop_all();
audio_play_sound(n_outside_level,10,true);
}else if(room == 11){
alarm[8] = 160;
}else if(room == 12){
global.isDark = true;
surface = surface_create(room_width,room_height);
surface_scale = 1/8;
audio_stop_all();
audio_play_sound(last_levels,10,true);
global.laserKill = false;
}else if(room == 13){
audio_stop_all();
global.laserKill = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>321</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_message</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>2</kind>
            <string>You are now docking at the space station</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == 11){
effect_create_below(ef_explosion,obj_rocket.x,obj_rocket.y,5,c_yellow);
view_xview = obj_rocket.x - display_get_gui_height() / 2;
view_yview = obj_rocket.y - display_get_gui_height() / 2;
view_vspeed = 1;
background_vspeed = 3;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.isDark == true &amp;&amp; instance_exists(obj_player) &amp;&amp; instance_exists(obj_light)){
surface_set_target(surface);
draw_clear(c_black);
with(obj_light){
draw_set_blend_mode(bm_src_color);
draw_sprite_ext(spr_light,0,obj_player.x*other.surface_scale,obj_player.y*other.surface_scale,lightSize*other.surface_scale,lightSize*other.surface_scale,0,c_white,lightStrength);
}
with(obj_emergency_light){
draw_sprite_ext(spr_light,0,x*other.surface_scale,y*other.surface_scale,lightSize*other.surface_scale,lightSize*other.surface_scale,0,c_white,lightStrength);
draw_set_blend_mode(bm_normal);
}
if(global.laserKill == true){
with(obj_laser){
draw_sprite_ext(spr_light,0,x*other.surface_scale,y*other.surface_scale,lightSize*other.surface_scale,lightSize*other.surface_scale,0,c_white,lightStrength);
}
}
surface_reset_target();
draw_surface_ext(surface,0,0,1/surface_scale,1/surface_scale,0,c_red,1);
}else if(global.isDark == true &amp;&amp; instance_exists(obj_player_sq) &amp;&amp; instance_exists(obj_light)){
surface_set_target(surface);
draw_clear(c_black);
with(obj_light){
draw_set_blend_mode(bm_src_color);
draw_sprite_ext(spr_light,0,obj_player_sq.x*other.surface_scale,obj_player_sq.y*other.surface_scale,lightSize*other.surface_scale,lightSize*other.surface_scale,0,c_white,lightStrength);
}
with(obj_emergency_light){
draw_sprite_ext(spr_light,0,x*other.surface_scale,y*other.surface_scale,lightSize*other.surface_scale,lightSize*other.surface_scale,0,c_white,lightStrength);
draw_set_blend_mode(bm_normal);
}
if(global.laserKill == true){
with(obj_laser){
draw_sprite_ext(spr_light,0,x*other.surface_scale,y*other.surface_scale,lightSize*other.surface_scale,lightSize*other.surface_scale,0,c_white,lightStrength);
}
}
surface_reset_target();
draw_surface_ext(surface,0,0,1/surface_scale,1/surface_scale,0,c_red,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == 13){
with(obj_camera){
if(wplayer == 0){
wplayer = 1;
}else{
wplayer = 0;
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
